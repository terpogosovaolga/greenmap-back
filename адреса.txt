все запросы начинаются с одного из: 
/trees - запросы про деревья (все деревья, добавить дерево, изменить дерево, удалить дерево и так далее)
/species - запросы про породы (все породы, добавить породу, изменить и т.д.)
/users - запросы про пользователей, в том числе регистрация и вход

#работает #естьпример (Test.html)
trees/getTrees/1 - GET. деревья с площадки с Id = 1. Запрос с join, поэтому приходят не только id внешних ключей, но и названия

#работает #естьпример (test.html)
trees/addTree - POST. добавить дерево. данные в json, и поскольку есть еще фото, оборачиваем в blob (в примере есть). По итогу - даем через FormData Blob, внутри картинка treeImage и json jsonbody. 

#работает #естьпример (test.html)
trees/archiveTree - POST. архивировать/разархивировать дерево. передаются json с ключами  tree_id и archive (0 - дерево нужно разархивировать, 1 - архивировать).

#работает #есть пример test.html
trees/moveTree - POST. изменение координат дерева. Передается tree_id, новые longitude и latitude в json

#работает #естьпример 
trees/changeImageOfTree - POST. изменение изображения дерева. Передаются tree_id и изображение trreeImage (через blob). 


#работает #естьпример 
trees/editTree -  POST. изменение дерева (всех полей, кроме архива, изображения, tree_number). отправляется json данных, вместе с tree_id


#работает #естьпример 
locations/getLocations - GET. все площадки. 

#работает #естьпример 
locations/addLocation - добавить площадку. POST-запрос, данные в json


#работает #естьпример 
locations/moveLocation - изменение координат центра площадки. area_id, latitude_center, longitude_center в json. POST


#работает #естьпример 
locations/changeImageOfLocation - изменение фото. json с area_id и картинка, через FormData в Blob. POST


#работает #естьпример 
locations/editLocation - изменение всех полей площадки, кроме id. post. отправляется json с данными, вместе с id

#работает #естьпример 
users/getUsers 

#работает #естьпример #разобраться с авторизацией
users/getUsersByRole - пользователи с ролью, role подается в json. 0 - админ, 1 - суперадмин

#работает #естьпример 
users/addUser - регистрация. POST

#работает #естьпример 
users/login - вход. возвращает success, id пользователя и role ( 0 админ, 1 суперадмин)

#работает #естьпример  не требует обращения к серверу
users/logout - выход

#работает #естьпример 
species/getSpecies - все породы GET

#работает #естьпример 
species/addSpecies - Добавить породу (в Json id, name) POST

#работает #естьпример 
species/editSpecies - редактировать существующую породы (в Json id, новый name) POST